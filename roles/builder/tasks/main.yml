---
- name: Set fact
  when: "'installer' in builder_compose_type or 'raw' in builder_compose_type"
  ansible.builtin.set_fact:
    _builder_compose_type: "{{ builder_compose_type }}"
    builder_compose_type: "{{ 'iot-commit' if ansible_distribution == 'Fedora' else 'edge-commit' }}"

- name: Enable Cockpit/Composer/Firewalld/Apache
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: cockpit.socket

- name: Add user to weldr group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: weldr
    append: true

- name: Create a blueprint
  infra.osbuild.create_blueprint:
    dest: "{{ builder_blueprint_src_path }}"
    name: "{{ builder_blueprint_name }}"
    distro: "{{ builder_blueprint_distro | default(omit) }}"
    packages: "{{ builder_compose_pkgs }}"
    customizations: "{{ builder_compose_customizations }}"
  register: blueprint_output

- name: Push the blueprint into image builder
  infra.osbuild.push_blueprint:
    src: "{{ builder_blueprint_src_path }}"

- name: Check if blueprint directory exists
  ansible.builtin.stat:
    path: "/var/www/html/{{ builder_blueprint_name }}"
  register: stat_output

- name: Initialize rpm-ostree repo for blueprint
  when: not stat_output.stat.exists
  block:
    - name: Create blueprint directory
      ansible.builtin.file:
        path: "/var/www/html/{{ builder_blueprint_name }}"
        mode: 0755
        state: directory
    - name: Initialize repository
      ansible.builtin.command:
        chdir: "/var/www/html/{{ builder_blueprint_name }}"
        cmd: '/usr/bin/ostree --repo=repo init --mode=archive'
      args:
        creates: "/var/www/html/{{ builder_blueprint_name }}/repo"


- name: Start compose
  infra.osbuild.start_compose:
    blueprint: "{{ builder_blueprint_name }}"
    compose_type: "{{ builder_compose_type }}"
  register: compose_start_out

- name: Wait for compose to finish
  infra.osbuild.wait_compose:
    compose_id: "{{ compose_start_out['result']['build_id'] }}"

- name: Create tmp directory for blueprint
  ansible.builtin.file:
    path: "/tmp/{{ builder_blueprint_name }}"
    mode: 0755
    state: directory

- name: Export the compose artifact
  infra.osbuild.export_compose:
    compose_id: "{{ compose_start_out['result']['build_id'] }}"
    dest: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}" # noqa yaml[line-length]

- name: Update ostree repository
  when: builder_compose_type == 'edge-commit' or builder_compose_type == 'iot-commit'
  block:
    - name: Untar artifact
      ansible.builtin.unarchive:
        src: /tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.tar
        dest: /tmp/{{ builder_blueprint_name }}
        remote_src: true

    - name: Get checksum from artifact
      ansible.builtin.command:
        cmd: "/usr/bin/ostree --repo=/tmp/{{ builder_blueprint_name }}/repo rev-parse {{ builder_blueprint_ref }}"
      register: checksum_output
      changed_when: false

    - name: Pull commit from artifact
      ansible.builtin.command:
        cmd: "/usr/bin/ostree --repo=/var/www/html/{{ builder_blueprint_name }}/repo pull-local /tmp/{{ builder_blueprint_name }}/repo {{ checksum_output['stdout'] }}"
      changed_when: true

    - name: Commit changes to repository
      ansible.builtin.command:
        cmd: "/usr/bin/ostree --repo=/var/www/html/{{ builder_blueprint_name }}/repo commit -b {{ builder_blueprint_ref }} -s 'Release {{ blueprint_output['current_version'] }}' --add-metadata-string=version={{ blueprint_output['current_version'] }} --tree=ref={{ checksum_output['stdout'] }}"
      changed_when: true

    - name: Remove tar file
      ansible.builtin.file:
        path: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}"
        state: absent

- name: Serve all other compose types on the http server
  when: builder_compose_type != 'edge-commit' and builder_compose_type != 'iot-commit'
  block:
    - name: Create images directory
      ansible.builtin.file:
        path: "/var/www/html/{{ builder_blueprint_name }}/images"
        mode: 0755
        state: directory
    - name: Copy image to web dir
      ansible.builtin.copy:
        src: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}" # noqa yaml[line-length]
        dest: "/var/www/html/{{ builder_blueprint_name }}/images/{{ builder_blueprint_name }}_{{ builder_compose_type }}.{{ compose_start_out['result']['output_type'] }}"
        remote_src: true
        mode: 0644
        owner: apache
        group: apache

- name: Create kickstart file
  ansible.builtin.template:
    src: 'templates/kickstart.j2'
    dest: "/var/www/html/{{ builder_blueprint_name }}/kickstart.ks"
    mode: 0755
  when: builder_aap_url is defined

- name: Restore context on blueprint directory
  ansible.builtin.command: "restorecon -R /var/www/html/{{ builder_blueprint_name }}"
  changed_when: true

- name: Create installer
  when:
    - _builder_compose_type is defined
    - "'installer' in _builder_compose_type or 'raw' in _builder_compose_type"
  block:
    - name: Start compose
      infra.osbuild.start_compose:
        blueprint: "{{ builder_blueprint_name }}"
        compose_type: "{{ _builder_compose_type }}"
        ostree_url: "http://{{ ansible_default_ipv4.address }}/{{ builder_blueprint_name }}/repo/"
        ostree_ref: "{{ builder_blueprint_ref | default(omit) }}"
      register: compose_start_out

    - name: Wait for compose to finish
      infra.osbuild.wait_compose:
        compose_id: "{{ compose_start_out['result']['build_id'] }}"

    - name: Create tmp directory for blueprint
      ansible.builtin.file:
        path: "/tmp/{{ builder_blueprint_name }}"
        mode: 0755
        state: directory

    - name: Export the compose artifact
      infra.osbuild.export_compose:
        compose_id: "{{ compose_start_out['result']['build_id'] }}"
        dest: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}" # noqa yaml[line-length]

    - name: Create images directory
      ansible.builtin.file:
        path: "/var/www/html/{{ builder_blueprint_name }}/images"
        mode: 0755
        state: directory

    - name: Copy iso to web dir
      ansible.builtin.copy:
        src: "/tmp/{{ builder_blueprint_name }}/{{ builder_blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}" # noqa yaml[line-length]
        dest: "/var/www/html/{{ builder_blueprint_name }}/images/{{ builder_blueprint_name }}_{{ _builder_compose_type }}.iso"
        remote_src: true
        mode: 0644
        owner: apache
        group: apache
