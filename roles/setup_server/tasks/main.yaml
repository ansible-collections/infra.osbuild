---

- name: Get Package Facts
  ansible.builtin.package_facts:

- name: Setup Repositories
  community.general.rhsm_repository:
    state: enabled
    purge: true
    name:
      - "rhel-{{ ansible_distribution_major_version }}-for-x86_64-appstream-rpms"
      - "rhel-{{ ansible_distribution_major_version }}-for-x86_64-baseos-rpms"
  when:
    - ansible_distribution == 'RedHat'
    - '"rh-amazon-rhui-client" not in ansible_facts["packages"]'
    - '"rhui-azure-rhel9" not in ansible_facts["packages"]'
    - '"rhui-azure-rhel8" not in ansible_facts["packages"]'
  
- name: Setup Custom Repositories
  when:
    - custom_repo_name
  block:
    - name: Create Override Directory
      ansible.builtin.file:
        path: /etc/osbuild-composer/repositories
        state: directory

    - name: Copy Current Repositories into Override Directory
      ansible.builtin.slurp:
        src: /usr/share/osbuild-composer/repositories/{{ "rhel-" if ansible_distribution == "RedHat" }}{{ ansible_distribution_version.split('.') | join('') }}.json
      register: current_repos_encoded
  
    - name: Print returned information
      ansible.builtin.debug:
        msg: "{{ current_repos_encoded['content'] | b64decode }}"

    - name: Add new repo
      ansible.builtin.set_fact:
        current_repos: "{{ current_repos_encoded['content'] | b64decode }}"

    - name: Print returned information
      ansible.builtin.debug:
        msg: "{{ current_repos[custom_repo_arch] }}"

    - name: Create test file
      ansible.builtin.template:
        src: templates/custom_repository.j2
        dest: /tmp/add_custom_package
      vars: 
        current_repos: "{{ current_repos_encoded['content'] | b64decode }}"

    - name: Add Distribution Specific json File
      ansible.builtin.copy:
        src: /tmp/add_custom_package
        dest: /etc/osbuild-composer/repositories/{{ "rhel-" if ansible_distribution == "RedHat" }}{{ ansible_distribution_version.split('.') | join('') }}.json
        remote_src: yes
    - name: Restart osbuild-composer service
      ansible.builtin.systemd:
        state: restarted
        name: osbuild-composer

- name: Install Packages
  ansible.builtin.dnf:
    state: present
    name:
      - rsync
      - osbuild-composer
      - composer-cli
      - cockpit-composer
      - bash-completion
      - firewalld
      - genisoimage
      - httpd
      - syslinux
      - cockpit

- name: RHEL8, CentOS8 and Fedora32 =< specific setup
  when:
    - ansible_distribution in ['RedHat', 'CentOS', 'Fedora']
    - ansible_distribution == 'Fedora' and ansible_distribution_major_version|int < 33 or
      ansible_distribution_major_version|int == 8
  block:
    - name: Install pytoml
      ansible.builtin.dnf:
        state: present
        name:
          - python3-pytoml

- name: RHEL9, CentOS9 and Fedora33 => specific setup
  block:
    - name: Install toml
      ansible.builtin.dnf:
        state: present
        name:
          - python3-toml
  when:
    - ansible_distribution in ['RedHat', 'CentOS', 'Fedora']
    - ansible_distribution == 'Fedora' and ansible_distribution_major_version|int > 32 or
      ansible_distribution_major_version|int == 9

- name: Enable Cockpit/Composer/Firewalld/Apache
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: "{{ item }}"
  loop:
    - osbuild-composer.socket
    - cockpit.socket
    - httpd.service
    - firewalld

- name: Enable Firewall Ports for Cockpit/Composer/Apache
  ansible.posix.firewalld:
    permanent: true
    immediate: true 
    service: "{{ item }}"
    state: enabled
  loop:
    - cockpit
    - http
