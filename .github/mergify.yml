---
#
# Shared keys
shared:
  # Add "common_merge_criteria" anchor
  # Use "*common_merge_criteria" alias to reference this anchor
  my_ci: &common_merge_criteria
    - "#approved-reviews-by>=1"
    - "#changes-requested-reviews-by=0"
    - "#review-threads-unresolved=0"
#
# Merge queue rules https://docs.mergify.com/actions/queue/#queue-rules
queue_rules:
  #
  # Q.1) Add this Pull Request to the merge queue
  - name: default
    conditions:
      - base=main
      - and: *common_merge_criteria
#
# Pull request rules https://docs.mergify.com/configuration/#pull-request-rules
# N.B. Evaluated in order defined
pull_request_rules:
  #
  # PR.1) Remove stale approvals or changes requests
  - name: Remove outdated reviews
    conditions:
      - base=main
    actions:
      dismiss_reviews:
        approved: true
        changes_requested: false
        message: New commit(s) added, removing existing approval(s)
        when: synchronize
  #
  # PR.2) Require all conversations to be resolved
  - name: Check for unresolved conversations before merging
    conditions:
      - "#review-threads-unresolved>0"
    actions:
      comment:
        message: "This Pull Request needs all conversation threads to be resolved. Could you fix it @{{author}}? üôè"
      label:
        add:
          - question
  #
  # PR.3) If all conversations to be resolved, remove question label
  - name: Remove question label from resolved conversations
    conditions:
      - "#review-threads-unresolved=0"
    actions:
      label:
        remove:
          - question

  # PR.4) If Pull Request check fails, request resolution (prevent stalling the merge queue)
  - name: Request Pull Request check re-run
    conditions:
      - and:
          - base=main
          - label!=work in progress
          - label!=do not merge
          - updated-at<1 days ago
          - and: *common_merge_criteria
          - or:
              - -check-success="CI"
              - -check-success="CI (Ansible devel sanity Lint)"
              - -check-success="CI (Ansible devel sanity Sanity)"
              - -check-success="CI (Ansible devel sanity Units)"
              - -check-success="CI (Summary Code Coverage)"

    actions:
      comment:
        message: "This Pull Request needs all checks to run successfully. Could you fix it @{{author}}? üôè"
      label:
        add:
          - invalid
  #
  # PR.5) Merge Pull Request rule
  - name: Automatic merge on approval for Pull Requests
    conditions:
      - base=main
      - label!=work in progress
      - label!=do not merge
      - check-success="CI"
      - check-success="CI (Ansible devel sanity Lint)"
      - check-success="CI (Ansible devel sanity Sanity)"
      - check-success="CI (Ansible devel sanity Units)"
      - check-success="CI (Summary Code Coverage)"
      - and: *common_merge_criteria
    actions:
      label:
        remove:
          - invalid
      queue:
        name: default
        method: merge
  #
  # PR.6) Detect when Pull Request has conflicts and add conflicts label
  - name: Warn on conflicts
    conditions:
      - conflict
    actions:
      comment:
        message: "This Pull Request is now in conflict. Could you fix it @{{author}}? üôè"
      label:
        add:
          - conflict
  #
  # PR.7) Detect when Pull Request conflict is cleared and remove label
  - name: Remove conflict label if not needed
    conditions:
      - -conflict
    actions:
      label:
        remove:
          - conflict
  #
  # PR.8) Automatically close Pull Request after 14 days
  - name: Close stale Pull Request
    conditions:
      - base=main
      - -closed
      - updated-at<14 days ago
    actions:
      close:
        message: |
          This Pull Request looks stale. Feel free to reopen it if you think it's a mistake.
  #
  # PR.9) Detect when Pull Request is ready / awaiting review and add label
  - name: Pull Request is ready and waiting for review
    conditions:
      - "#commented-reviews-by<1"
      - created-at<1 days ago
      - -draft
      # TODO: Check at least one change type is selected
      # Checklist
      # - body~=(?m)^- \[[xX]\] I have added unit tests that prove my fix is effective or that my feature works
    actions:
      label:
        add:
          - waiting for review
  #
  # PR.10) Detect when Pull Request received review and remove label
  - name: Remove waiting for review label if not needed
    conditions:
      - "#commented-reviews-by>=1"
      - -draft
    actions:
      label:
        remove:
          - waiting for review
  #
  # PR.11) Detect when Pull Request includes a bug and add label
  - name: Add bug label
    conditions:
      - body~=(?m)^- \[[xX]\] Bug fix \(non-breaking change which fixes an issue\)
    actions:
      label:
        add:
          - bug
  #
  # PR.12) Detect when Pull Request no longer includes bug and remove label
  - name: Remove bug label
    conditions:
      - body~=(?m)^- \[ \] Bug fix \(non-breaking change which fixes an issue\)
    actions:
      label:
        remove:
          - bug

  #
  # PR.13) Detect when Pull Request includes enhancement and add label
  - name: add enhancement label
    conditions:
      - body~=(?m)^- \[[xX]\] New feature \(non-breaking change which adds functionality\)
    actions:
      label:
        add:
          - enhancement
  #
  # PR.14) Detect when Pull Request no longer includes enhancement and remove label
  - name: remove enhancement label
    conditions:
      - body~=(?m)^- \[ \] New feature \(non-breaking change which adds functionality\)
    actions:
      label:
        remove:
          - enhancement

  #
  # PR.15) Detect when Pull Request includes documentation updates and add label
  - name: add documentation label
    conditions:
      - body~=(?m)^- \[[xX]\] Documentation update
    actions:
      label:
        add:
          - documentation
  #
  # PR.16) Detect when Pull Request no longer includes documentation updates and remove label
  - name: remove documentation label
    conditions:
      - body~=(?m)^- \[ \] Documentation update
    actions:
      label:
        remove:
          - documentation

  #
  # PR.17) Detect when Pull Request includes tests update and add label
  - name: Add test update label
    conditions:
      - body~=(?m)^- \[[xX]\] Tests update
    actions:
      label:
        add:
          - test update
  #
  # PR.18) Detect when Pull Request no longer includes tests update and remove label
  - name: remove test update label
    conditions:
      - body~=(?m)^- \[ \] Tests update
    actions:
      label:
        remove:
          - test update

  #
  # PR.19) Detect when Pull Request includes refactoring and add label
  - name: add refactor label
    conditions:
      - body~=(?m)^- \[[xX]\] Refactor
    actions:
      label:
        add:
          - refactor
  #
  # PR.20) Detect when Pull Request no longer includes refactoring and remove label
  - name: remove refactor label
    conditions:
      - body~=(?m)^- \[ \] Refactor
    actions:
      label:
        remove:
          - refactor
