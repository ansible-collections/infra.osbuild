---
- name: Test the collection
  hosts: all
  gather_facts: true
  vars:
    blueprint_name: test_blueprint
    blueprint_src_path: "/tmp/testblueprint.toml"
    blueprint_distro_lower: "{{ ansible_distribution if not 'RedHat' else 'rhel' | lower }}"
    blueprint_ref: "{{ blueprint_distro_lower }}/{{ hostvars[inventory_hostname].ansible_distribution_major_version }}/x86_64/edge"
    compose_type: edge-commit
    pubkey_file: "~/.ssh/id_rsa.pub"
    compose_pkgs:
      - "vim-enhanced"
      - "git"
      - "neovim"
    compose_customizations:
      user:
        name: "core"
        description: "test user"
        password: "openshift"
        key: "{{ pubkey_file }}"
        groups: '["users", "wheel"]'
  tasks:
    - name: Add user to weldr group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: weldr
        append: true
    - name: Slurp the pubkey
      ansible.builtin.slurp:
        src: "{{ pubkey_file }}"
      register: slurp_out
    - name: Create a blueprint
      infra.osbuild.create_blueprint:
        dest: "{{ blueprint_src_path }}"
        name: "{{ blueprint_name }}"
        packages: "{{ compose_pkgs }}"
        customizations: "{{ compose_customizations }}"
      register: blueprint_output

    - name: Push the blueprint into image builder
      infra.osbuild.push_blueprint:
        src: "{{ blueprint_src_path }}"

    - name: Check if blueprint directory exists
      ansible.builtin.stat:
        path: "/var/www/html/{{ blueprint_name }}"
      register: stat_output

    - name: Initialize rpm-ostree repo for blueprint
      when: not stat_output.stat.exists
      block:
        - name: Create blueprint directory
          ansible.builtin.file:
            path: "/var/www/html/{{ blueprint_name }}"
            mode: '0755'
            state: directory
        - name: Initialize repository
          ansible.builtin.command:
            chdir: "/var/www/html/{{ blueprint_name }}"
            cmd: '/usr/bin/ostree --repo=repo init --mode=archive'
          args:
            creates: "/var/www/html/{{ blueprint_name }}/repo"

    - name: Start compose
      infra.osbuild.start_compose:
        blueprint: "{{ blueprint_name }}"
        compose_type: "{{ compose_type }}"
      register: compose_start_out

    - name: Debug output for compose_start_out
      ansible.builtin.debug:
        var: compose_start_out

    - name: Wait for compose to finish
      infra.osbuild.wait_compose:
        compose_id: "{{ compose_start_out['result']['build_id'] }}"

    - name: Create tmp directory for blueprint
      ansible.builtin.file:
        path: "/tmp/{{ blueprint_name }}"
        mode: '0755'
        state: directory

    - name: Export the compose artifact
      become: true
      infra.osbuild.export_compose:
        compose_id: "{{ compose_start_out['result']['build_id'] }}"
        dest: "/tmp/{{ blueprint_name }}/{{ blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}" # noqa yaml[line-length]

    - name: Update ostree repository
      become: true
      when: compose_start_out['result']['output_type'] == 'tar'
      block:
        - name: Untar artifact
          ansible.builtin.unarchive:
            src: /tmp/{{ blueprint_name }}/{{ blueprint_name }}-{{ blueprint_output['current_version'] }}.tar
            dest: /tmp/{{ blueprint_name }}
            remote_src: true

        - name: Get checksum from artifact
          ansible.builtin.command:
            cmd: "/usr/bin/ostree --repo=/tmp/{{ blueprint_name }}/repo rev-parse {{ blueprint_ref }}"
          register: checksum_output
          changed_when: false

        - name: Pull commit from artifact
          ansible.builtin.command:
            cmd: "/usr/bin/ostree --repo=/var/www/html/{{ blueprint_name }}/repo pull-local /tmp/{{ blueprint_name }}/repo {{ checksum_output['stdout'] }}"
          changed_when: true

        - name: Commit changes to repository
          ansible.builtin.command:
            cmd: "/usr/bin/ostree --repo=/var/www/html/{{ blueprint_name }}/repo commit -b {{ blueprint_ref }} -s 'Release {{ blueprint_output['current_version'] }}' --add-metadata-string=version={{ blueprint_output['current_version'] }} --tree=ref={{ checksum_output['stdout'] }}" # noqa yaml[line-length]
          changed_when: true

        - name: Remove tar file
          ansible.builtin.file:
            path: "/tmp/{{ blueprint_name }}/{{ blueprint_name }}-{{ blueprint_output['current_version'] }}.{{ compose_start_out['result']['output_type'] }}"
            state: absent
